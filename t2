#!/usr/bin/env python
from __future__ import print_function
from selenium import webdriver
import os,sys,json

def create_driver():
    dcap = dict(webdriver.DesiredCapabilities.PHANTOMJS)
    dcap["phantomjs.page.settings.userAgent"] = "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/53 (KHTML, like Gecko) Chrome/15.0.87"
    return webdriver.PhantomJS(desired_capabilities=dcap)

class T2():
    def __init__(self):
        self.driver = create_driver()
        self.driver.implicitly_wait(30)
        self.base_url = "https://t-square.gatech.edu/"
        self.logged_in = False
        self.cache_file = '.t2-cache'


    def close(self):
        self.driver.quit()
    

    def login(self, user=None, password=None):
        if self.logged_in:
            return
        if not user:
            user = open('.username').read().strip()
        if not password:
            password = open('.password').read().strip()
        driver = self.driver
        driver.get(self.base_url + "/portal")
        driver.find_element_by_id("loginLink1").click()
        driver.find_element_by_id("password").clear()
        driver.find_element_by_id("password").send_keys(password)
        driver.find_element_by_id("username").clear()
        driver.find_element_by_id("username").send_keys(user)
        driver.find_element_by_name("submit").click()
        self.logged_in = True


    def list_courses(self):
        driver = self.driver
        driver.get(self.base_url + "/portal")
        courses = [link.get_attribute('title') for link in driver.find_element_by_id("siteLinkList").find_elements_by_css_selector('li > a')]
        f = open(self.cache_file, 'w')
        json.dump(courses, f)

        return courses


    def upload_file(self, file_str):
        course_name = "CS-4290-A, CS-6290-A, ..."
        assignment_name = "Project 2"
        driver = self.driver
        driver.get(self.base_url + "/portal")
        driver.find_element_by_css_selector('a[title="' + course_name + '"] > span').click()
        driver.find_element_by_link_text("Assignments").click()
        driver.switch_to.frame(driver.find_element_by_tag_name("iframe").get_attribute('id'))
        driver.find_element_by_link_text(assignment_name).click()

        driver.find_element_by_name("upload").send_keys(file_str)
        #driver.find_element_by_id("Assignment.view_submission_honor_pledge_yes").click()
        driver.find_element_by_name("post").click()

def display_help():
    print("Usage: t2 (login|list)")

def main():
    if len(sys.argv) > 1:
        subcommand = sys.argv[1]
    else:
        display_help()
        sys.exit(0)

    if subcommand == 'login':
#Add ability to cach login credentials
        pass
    elif subcommand == 'list':

        if os.path.exists('.t2-cache'):
            f = open('.t2-cache')
            courses = json.load(f)
        else:
            t2 = T2()
            t2.login()
            courses = t2.list_courses()
        for c in courses:
            print(c)
    elif subcommand == 'upload':
        #a_file = sys.argv[3]
        #if os.is_file(a_file):
            #t2 = T2()
            #t2.login()
            #t2.upload_file(a_file)
        #else:
            #raise ValueError('Invalid Filename')
        pass
    else:
        display_help()


if __name__ == "__main__":
    main()
